// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package be.mobila.im.models;

import be.mobila.im.models.ImUser;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect ImUserDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ImUserDataOnDemand: @Component;
    
    private Random ImUserDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ImUser> ImUserDataOnDemand.data;
    
    public ImUser ImUserDataOnDemand.getNewTransientImUser(int index) {
        be.mobila.im.models.ImUser obj = new be.mobila.im.models.ImUser();
        obj.setFirstname("firstname_" + index);
        obj.setIdentifier("identifier_" + index);
        obj.setName("name_" + index);
        return obj;
    }
    
    public ImUser ImUserDataOnDemand.getSpecificImUser(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ImUser obj = data.get(index);
        return ImUser.findImUser(obj.getId());
    }
    
    public ImUser ImUserDataOnDemand.getRandomImUser() {
        init();
        ImUser obj = data.get(rnd.nextInt(data.size()));
        return ImUser.findImUser(obj.getId());
    }
    
    public boolean ImUserDataOnDemand.modifyImUser(ImUser obj) {
        return false;
    }
    
    public void ImUserDataOnDemand.init() {
        data = be.mobila.im.models.ImUser.findImUserEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ImUser' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<be.mobila.im.models.ImUser>();
        for (int i = 0; i < 10; i++) {
            be.mobila.im.models.ImUser obj = getNewTransientImUser(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
