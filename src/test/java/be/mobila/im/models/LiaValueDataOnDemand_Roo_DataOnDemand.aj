// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package be.mobila.im.models;

import be.mobila.im.models.LiaValue;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect LiaValueDataOnDemand_Roo_DataOnDemand {
    
    declare @type: LiaValueDataOnDemand: @Component;
    
    private Random LiaValueDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<LiaValue> LiaValueDataOnDemand.data;
    
    public LiaValue LiaValueDataOnDemand.getNewTransientLiaValue(int index) {
        be.mobila.im.models.LiaValue obj = new be.mobila.im.models.LiaValue();
        obj.setAmount(new Integer(index).longValue());
        obj.setInsurance(null);
        obj.setInsuranceSubType(null);
        obj.setProposal(null);
        obj.setRate(new Integer(index).doubleValue());
        return obj;
    }
    
    public LiaValue LiaValueDataOnDemand.getSpecificLiaValue(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        LiaValue obj = data.get(index);
        return LiaValue.findLiaValue(obj.getId());
    }
    
    public LiaValue LiaValueDataOnDemand.getRandomLiaValue() {
        init();
        LiaValue obj = data.get(rnd.nextInt(data.size()));
        return LiaValue.findLiaValue(obj.getId());
    }
    
    public boolean LiaValueDataOnDemand.modifyLiaValue(LiaValue obj) {
        return false;
    }
    
    public void LiaValueDataOnDemand.init() {
        data = be.mobila.im.models.LiaValue.findLiaValueEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'LiaValue' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<be.mobila.im.models.LiaValue>();
        for (int i = 0; i < 10; i++) {
            be.mobila.im.models.LiaValue obj = getNewTransientLiaValue(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
